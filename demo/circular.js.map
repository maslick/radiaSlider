{"version":3,"sources":["../src/slider-circular.js","circular.js"],"names":["Slider","options","sliders","scaleWidth","fillWidth","knobWidth","startAngle","Math","PI","endAngle","continuousMode","container","document","getElementById","canvasId","the_body","body","context","setupHiDpiCanvas","x0","undefined","width","y0","height","window","devicePixelRatio","MouseX","MouseY","selectedSlider","currentSlider","rotationEventListener","_rotation","bind","addEventListener","_handleMouseDown","_handleMouseUp","_handleClick","_handleTouch","_handleMove","_handleEnd","id","color","min","max","radius","onValueChangeCallback","changed","v","ang_degrees","normalizedValue","step","obj","setSliderValue","value","slider","radToDeg","normalizeTan","drawAll","key","clearRect","hasOwnProperty","drawScale","drawData","drawArrow","drawKnob","drawCenterDot","i","beginPath","strokeStyle","arc","lineWidth","stroke","fillStyle","fill","moveTo","lineTo","cos","sin","x","y","atan2","rect","getBoundingClientRect","event","touches","clientX","left","clientY","top","calculateUserCursor","hip","sqrt","pow","abs","preventDefault","getSelectedSlider","removeEventListener","calculateAngles","canvas","ctx","getContext","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","oldWidth","oldHeight","style","scale","ang","module","exports","addSlider","innerHTML","deg","toFixed","slider2"],"mappings":"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","file":"circular.js","sourceRoot":"../example","sourcesContent":["(function () {\n    class Slider {\n        constructor(options) {\n            this.sliders = {};\n            this.scaleWidth = 35;\n            this.fillWidth = 35;\n            this.knobWidth = 35;\n\n            this.startAngle = 1.5 * Math.PI + 0.000001;\n            this.endAngle = 1.5 * Math.PI - 0.000001;\n\n            this.continuousMode = options.continuousMode || false;\n\n            this.container = document.getElementById(options.canvasId);\n            this.the_body = document.body;\n            this.context = Slider.setupHiDpiCanvas(this.container);\n\n            this.x0 = options.x0 === undefined ? this.container.width / 2 : options.x0;\n            this.y0 = options.y0 === undefined ? this.container.height / 2 : options.y0;\n            this.x0 /= window.devicePixelRatio || 1;\n            this.y0 /= window.devicePixelRatio || 1;\n\n            this.MouseX = 0;\n            this.MouseY = 0;\n\n            this.selectedSlider = null;\n            this.currentSlider = null;\n\n            this.rotationEventListener = this._rotation.bind(this);\n            this.container.addEventListener('mousedown', this._handleMouseDown.bind(this), false);\n            this.the_body.addEventListener('mouseup', this._handleMouseUp.bind(this), false);\n            this.container.addEventListener('click', this._handleClick.bind(this), false);\n\n\n            this.container.addEventListener('touchstart', this._handleTouch.bind(this), false);\n            this.container.addEventListener('touchmove', this._handleMove.bind(this), false);\n            this.container.addEventListener('touchend', this._handleEnd.bind(this), false);\n        }\n\n        static setupHiDpiCanvas(canvas) {\n            let ctx = canvas.getContext('2d');\n            let devicePixelRatio = window.devicePixelRatio || 1;\n            let backingStoreRatio =\n                ctx.webkitBackingStorePixelRatio ||\n                ctx.mozBackingStorePixelRatio ||\n                ctx.msBackingStorePixelRatio ||\n                ctx.oBackingStorePixelRatio ||\n                ctx.backingStorePixelRatio || 1;\n\n            let ratio = devicePixelRatio / backingStoreRatio;\n            // upscale the canvas if the two ratios don't match\n            if (devicePixelRatio !== backingStoreRatio) {\n                let oldWidth = canvas.width;\n                let oldHeight = canvas.height;\n\n                canvas.width = oldWidth * ratio;\n                canvas.height = oldHeight * ratio;\n\n                canvas.style.width = oldWidth + 'px';\n                canvas.style.height = oldHeight + 'px';\n\n                // now scale the context to counter\n                // the fact that we've manually scaled\n                // our canvas element\n                ctx.scale(ratio, ratio);\n            }\n            return ctx;\n        }\n\n        // Adds a slider band to the slider\n        addSlider(options) {\n            this.sliders[options.id] = {\n                id: options.id,\n                container: document.getElementById(options.container),\n                color: options.color || '#104b63',\n                min: options.min || 0,\n                max: options.max || 100,\n                radius: options.radius || 100,\n                startAngle: this.startAngle,\n                endAngle: this.endAngle,\n                onValueChangeCallback: options.changed || function (v) {},\n                ang_degrees: 0,\n                normalizedValue: options.min || 0,\n                step: options.step || 1\n            };\n\n            const obj = this.sliders[options.id];\n            this.setSliderValue(obj.id, options.min);\n        }\n\n        // Sets (draws) slider band value given the band id and value\n        setSliderValue(id, value) {\n            const slider = this.sliders[id];\n            if (value <= slider.min) {\n                slider.endAngle = this.startAngle;\n                slider.ang_degrees = 0;\n                slider.normalizedValue = 0;\n            } else if (value >= slider.max) {\n                slider.endAngle = this.endAngle;\n                slider.ang_degrees = 360;\n                slider.normalizedValue = slider.max;\n            } else {\n                //value = (value / slider.step >> 0) * slider.step;\n                slider.endAngle = 2 * Math.PI * (value - slider.min) / (slider.max - slider.min) - Math.PI / 2;\n                slider.ang_degrees = Slider.radToDeg(Slider.normalizeTan(slider.endAngle));\n                slider.normalizedValue = value;\n            }\n\n            this.drawAll();\n        }\n\n        // Redraws everything\n        drawAll() {\n            this.context.clearRect(0, 0, this.container.width, this.container.height);\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                this.drawScale(obj);\n                this.drawData(obj);\n                this.drawArrow(obj);\n                this.drawKnob(obj);\n                obj.onValueChangeCallback({'rad': obj.endAngle, 'deg': obj.ang_degrees, 'value': obj.normalizedValue});\n            }\n            this.drawCenterDot();\n        }\n\n        // Draw the scale for a selected slider band\n        drawScale(slider) {\n            // Scale\n            for (let i = 0; i <= 2 * Math.PI; i += Math.PI / 6) {\n                this.context.beginPath();\n                this.context.strokeStyle = '#eeeeee';\n                this.context.arc(this.x0, this.y0, slider.radius, i, i + Math.PI / 4, false);\n                this.context.lineWidth = this.scaleWidth;\n                this.context.stroke();\n            }\n        }\n\n        // Draw dot in the center\n        drawCenterDot () {\n            this.context.beginPath();\n            this.context.strokeStyle = '#eeeeee';\n            this.context.arc(this.x0, this.y0, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = '#eeeeee';\n            this.context.fill();\n        }\n\n        // Draw the data on the selected slider band\n        drawData(slider) {\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.arc(this.x0, this.y0, slider.radius, slider.startAngle, slider.endAngle, false);\n            this.context.lineWidth = this.fillWidth;\n            this.context.stroke();\n        }\n\n        // Draw tail arrow\n        drawArrow(slider) {\n            this.context.beginPath();\n            this.context.moveTo(this.x0, this.y0 - slider.radius + this.scaleWidth / 2);\n            this.context.lineTo(this.x0, this.y0 - this.scaleWidth - slider.radius + this.scaleWidth / 2);\n            this.context.lineTo(this.x0 + this.scaleWidth / 4, this.y0 - this.scaleWidth / 2 - slider.radius + this.scaleWidth / 2);\n            this.context.fillStyle = \"#eeeeee\";\n            this.context.fill();\n        }\n\n        // Draw the knob (control element)\n        drawKnob(slider) {\n            // Knob\n            this.context.beginPath();\n            this.context.strokeStyle = '#eb879c';\n            this.context.arc(\n                Math.cos(slider.endAngle) * slider.radius + this.x0,\n                Math.sin(slider.endAngle) * slider.radius + this.y0,\n                this.knobWidth / 2,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n\n            this.context.fillStyle = '#eb879c';\n            this.context.fill();\n\n            // Dot on the knob\n            this.context.beginPath();\n            this.context.strokeStyle = 'yellow';\n            this.context.arc(\n                Math.cos(slider.endAngle) * slider.radius + this.x0,\n                Math.sin(slider.endAngle) * slider.radius + this.y0,\n                this.scaleWidth / 10,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n            this.context.fillStyle = 'yellow';\n            this.context.fill();\n        }\n\n        // Calculate angles given the cursor position\n        calculateAngles(x, y) {\n            if (!this.selectedSlider) return;\n\n            let max = this.selectedSlider.max,\n                min = this.selectedSlider.min,\n                step = this.selectedSlider.step,\n                endAngle = Math.atan2(y - this.y0, x - this.x0),\n                ang_degrees = Slider.radToDeg(Slider.normalizeTan(endAngle)),\n                normalizedValue = Slider.normalizeTan(endAngle) * (max - min) / (2 * Math.PI) + min;\n\n            normalizedValue = (normalizedValue / step >> 0) * step;\n\n            this.selectedSlider.endAngle = endAngle;\n            this.selectedSlider.ang_degrees = ang_degrees;\n            this.selectedSlider.normalizedValue = normalizedValue;\n        }\n\n        // Helper method\n        static radToDeg(ang) {\n            return ang * 180 / Math.PI;\n        }\n\n        // Normalizes tangent\n        static normalizeTan(ang) {\n            return ang + Math.PI / 2 > 0 ? ang + Math.PI / 2 : (2 * Math.PI + ang + Math.PI / 2);\n        }\n\n        // Calculates cursor coordinates\n        calculateUserCursor() {\n            const rect = this.container.getBoundingClientRect();\n\n            if (event.touches) {\n                this.MouseX = event.touches[0].clientX - rect.left;\n                this.MouseY = event.touches[0].clientY - rect.top;\n            } else {\n                this.MouseX = event.clientX - rect.left;\n                this.MouseY = event.clientY - rect.top;\n            }\n        }\n\n\n        // Returns a slider band based on the cursor position\n        getSelectedSlider() {\n            this.calculateUserCursor();\n            const hip = Math.sqrt(Math.pow(this.MouseX - this.x0, 2) + Math.pow(this.MouseY - this.y0, 2));\n            let selectedSlider;\n\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                if (Math.abs(hip - obj.radius) <= this.scaleWidth / 2) {\n                    selectedSlider = obj;\n                    break;\n                }\n            }\n            return selectedSlider ? selectedSlider : null;\n        }\n\n\n        // Event handlers (mousedown, mouseup, mousemove, mouseclick, touches)\n        _handleMouseDown(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (!this.selectedSlider) return;\n            this.the_body.addEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        _handleMouseUp(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n            this.currentSlider = this.selectedSlider;\n        }\n\n        _handleClick(event) {\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.currentSlider && this.getSelectedSlider() && this.currentSlider.id !== this.getSelectedSlider().id) return;\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleTouch(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleMove(event) {\n            event.preventDefault();\n            if (this.continuousMode) this._rotation();\n            else if (this.selectedSlider) this._rotation();\n        }\n\n        _handleEnd(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        // Rotation wrapper\n        _rotation() {\n            this.calculateUserCursor();\n            if (this.continuousMode) this.selectedSlider = this.getSelectedSlider();\n            this.calculateAngles(this.MouseX, this.MouseY);\n            this.drawAll();\n        }\n    }\n\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n        module.exports = Slider;\n    else window.Slider = Slider;\n})();\n","import Slider from \"../src/slider-circular\";\n\nvar slider = new Slider({canvasId: \"myCanvas\", continuousMode: true});\nslider.addSlider({\n    id: 1,\n    radius: 50,\n    min: -50,\n    max: 50,\n    color: \"#104b63\",\n    step: 1,\n    changed: function (v) {\n        document.getElementById('value1').innerHTML = \"Angle: \" + v.deg.toFixed(2) + \" deg, value: \" + v.value.toFixed(2);\n    }\n});\nslider.setSliderValue(1, 34);\n\nslider.addSlider({\n    id: 2,\n    radius: 90,\n    min: -100,\n    max: 100,\n    color: \"#ff9a9a\",\n    step: 5,\n    changed: function (v) {\n        document.getElementById('value2').innerHTML = \"Angle: \" + v.deg.toFixed(2) + \" deg, value: \" + v.value.toFixed(2);\n    }\n});\nslider.setSliderValue(2, 70);\n\nslider.addSlider({\n    id: 3,\n    radius: 130,\n    min: 0,\n    max: 360,\n    color: \"#76c7e9\",\n    step: 0.1,\n    changed: function (v) {\n        document.getElementById('value3').innerHTML = \"Angle: \" + v.deg.toFixed(2) + \" deg, value: \" + v.value.toFixed(2);\n    }\n});\nslider.setSliderValue(3, 307);\n\nvar slider2 = new Slider({canvasId: \"myCanvas2\"});\nslider2.addSlider({\n    id: 1,\n    radius: 90,\n    min: 0,\n    max: 30,\n    step: 3,\n    color: \"#76c7e9\",\n    changed: function (v) {\n        document.getElementById('value4').innerHTML = \"Angle: \" + v.deg.toFixed(2) + \" deg, value: \" + v.value.toFixed(2);\n    }\n});\n\nslider2.addSlider({\n    id: 3,\n    radius: 130,\n    min: -1,\n    max: 1,\n    step: 0.2,\n    color: \"#ff9a9a\",\n    changed: function (v) {\n        document.getElementById('value5').innerHTML = \"Angle: \" + v.deg.toFixed(2) + \" deg, value: \" + v.value.toFixed(2);\n    }\n});"]}