{"version":3,"sources":["../src/slider-linear.js","linear.js"],"names":["Slider","options","sliders","scaleWidth","fillWidth","knobWidth","continuousMode","vertical","container","document","getElementById","canvasId","the_body","body","context","setupHiDpiCanvas","MouseX","MouseY","selectedSlider","currentSlider","readOnly","rotationEventListener","_rotation","bind","addEventListener","_handleMouseDown","_handleMouseUp","_handleClick","_handleTouch","_handleMove","_handleEnd","id","color","width","min","max","step","x0","y0","onValueChangeCallback","changed","v","value","normalizedValue","obj","setSliderValue","slider","drawAll","key","clearRect","height","hasOwnProperty","drawScale","drawData","drawKnob","fix_x","x1","y1","fix_y","beginPath","strokeStyle","arc","Math","PI","lineWidth","fillStyle","fill","moveTo","lineTo","stroke","x","y","w","val","nomval","rect","getBoundingClientRect","event","touches","clientX","left","clientY","top","calculateUserCursor","xx","yy","preventDefault","getSelectedSlider","removeEventListener","calculateValues","canvas","ctx","getContext","devicePixelRatio","window","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","oldWidth","oldHeight","style","scale","module","exports","colors","temp","slider0","slider1","slider2","slider3","karandashi","randomInRange","start","end","floor","random","initSliders","i","t","addSlider","initKarandashi","toString"],"mappings":"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","file":"linear.js","sourceRoot":"../example","sourcesContent":["(function () {\n    class Slider {\n        constructor(options) {\n            this.sliders = {};\n            this.scaleWidth = 34;\n            this.fillWidth = 35;\n            this.knobWidth = 35;\n\n            this.continuousMode = options.continuousMode || false;\n            this.vertical = options.vertical || false;\n\n            this.container = document.getElementById(options.canvasId);\n            this.the_body = document.body;\n            this.context = Slider.setupHiDpiCanvas(this.container);\n\n            this.MouseX = 0;\n            this.MouseY = 0;\n\n            this.selectedSlider = null;\n            this.currentSlider = null;\n\n            this.readOnly = options.readOnly || false;\n            if (!this.readOnly) {\n                this.rotationEventListener = this._rotation.bind(this);\n                this.container.addEventListener('mousedown', this._handleMouseDown.bind(this), false);\n                this.the_body.addEventListener('mouseup', this._handleMouseUp.bind(this), false);\n                this.container.addEventListener('click', this._handleClick.bind(this), false);\n\n                this.container.addEventListener('touchstart', this._handleTouch.bind(this), false);\n                this.container.addEventListener('touchmove', this._handleMove.bind(this), false);\n                this.container.addEventListener('touchend', this._handleEnd.bind(this), false);\n            }\n        }\n\n        static setupHiDpiCanvas(canvas) {\n            let ctx = canvas.getContext('2d');\n            let devicePixelRatio = window.devicePixelRatio || 1;\n            let backingStoreRatio =\n                ctx.webkitBackingStorePixelRatio ||\n                ctx.mozBackingStorePixelRatio ||\n                ctx.msBackingStorePixelRatio ||\n                ctx.oBackingStorePixelRatio ||\n                ctx.backingStorePixelRatio || 1;\n\n            let ratio = devicePixelRatio / backingStoreRatio;\n            // upscale the canvas if the two ratios don't match\n            if (devicePixelRatio !== backingStoreRatio) {\n                let oldWidth = canvas.width;\n                let oldHeight = canvas.height;\n\n                canvas.width = oldWidth * ratio;\n                canvas.height = oldHeight * ratio;\n\n                canvas.style.width = oldWidth + 'px';\n                canvas.style.height = oldHeight + 'px';\n\n                // now scale the context to counter\n                // the fact that we've manually scaled\n                // our canvas element\n                ctx.scale(ratio, ratio);\n            }\n            return ctx;\n        }\n\n        // Adds a slider band to the slider\n        addSlider(options) {\n            this.sliders[options.id] = {\n                id: options.id,\n                container: document.getElementById(options.container),\n                color: options.color || '#104b63',\n                width: options.width || 100,\n                min: options.min || 0,\n                max: options.max || 100,\n                step: options.step || 1,\n                x0: options.x0 || 0,\n                y0: options.y0 || 0,\n                onValueChangeCallback: options.changed || function (v) {},\n                value: 0,\n                normalizedValue: options.min || 0\n            };\n\n            const obj = this.sliders[options.id];\n            this.setSliderValue(obj.id, options.min);\n        }\n\n        // Sets (draws) slider band value given the band id and value\n        setSliderValue(id, value) {\n            const slider = this.sliders[id];\n            if (value <= slider.min) {\n                slider.value = 0;\n                slider.normalizedValue = slider.min;\n            } else if (value >= slider.max) {\n                slider.value = slider.width;\n                slider.normalizedValue = slider.max;\n            } else {\n                slider.value = slider.width * (value - slider.min) / (slider.max - slider.min);\n                slider.normalizedValue = value;\n            }\n            this.drawAll();\n        }\n\n        // Redraws everything\n        drawAll() {\n            this.context.clearRect(0, 0, this.container.width, this.container.height);\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                const obj = this.sliders[key];\n                this.drawScale(obj);\n                this.drawData(obj);\n                this.drawKnob(obj);\n                obj.onValueChangeCallback({'width': obj.value, 'value': obj.normalizedValue});\n            }\n        }\n\n        // Draw the scale for a selected slider band\n        drawScale(slider) {\n            let fix_x = this.vertical ? 0 : 1;\n            let fix_y = this.vertical ? 1 : 0;\n\n            // first rounded edge\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.arc(slider.x0 + fix_x, slider.y0 - fix_y, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = slider.color;\n            this.context.fill();\n\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.width;\n            }\n            else {\n                x1 = slider.x0 + slider.width;\n                y1 = slider.y0;\n            }\n            // Scale\n            this.context.beginPath();\n            this.context.strokeStyle = '#eeeeee';\n            this.context.moveTo(slider.x0, slider.y0);\n            this.context.lineTo(x1, y1);\n            this.context.lineWidth = this.scaleWidth;\n            this.context.stroke();\n\n\n            // second rounded edge\n            this.context.strokeStyle = '#eeeeee';\n            this.context.arc(x1, y1, this.scaleWidth/2, 0, Math.PI*2, false);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = '#eeeeee';\n            this.context.fill();\n        }\n\n        // Draw the data on the selected slider band\n        drawData(slider) {\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.value;\n            }\n            else {\n                x1 = slider.x0 + slider.value;\n                y1 = slider.y0;\n            }\n\n            this.context.beginPath();\n            this.context.strokeStyle = slider.color;\n            this.context.moveTo(slider.x0, slider.y0);\n            this.context.lineTo(x1, y1);\n            this.context.lineWidth = this.fillWidth;\n            this.context.stroke();\n        }\n\n        // Draw the knob (control element)\n        drawKnob(slider) {\n            // Knob\n            let x1, y1;\n            if (this.vertical) {\n                x1 = slider.x0;\n                y1 = slider.y0 - slider.value;\n            }\n            else {\n                x1 = slider.x0 + slider.value;\n                y1 = slider.y0;\n            }\n\n            this.context.beginPath();\n            this.context.strokeStyle = '#eb879c';\n            this.context.arc(\n                x1,\n                y1,\n                this.knobWidth / 2,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n\n            this.context.fillStyle = '#eb879c';\n            this.context.fill();\n\n            // Dot on the knob\n            this.context.beginPath();\n            this.context.strokeStyle = 'yellow';\n            this.context.arc(\n                x1,\n                y1,\n                this.scaleWidth / 10,\n                0, Math.PI * 2, false\n            );\n            this.context.lineWidth = 1;\n            this.context.fillStyle = 'yellow';\n            this.context.fill();\n        }\n\n        // Calculate angles given the cursor position\n        calculateValues(x, y) {\n            if (!this.selectedSlider) return;\n\n            let max = this.selectedSlider.max,\n                min = this.selectedSlider.min,\n                step = this.selectedSlider.step,\n                w = this.selectedSlider.width;\n\n            let x1;\n            x1 = this.vertical ? this.selectedSlider.y0 - y : x - this.selectedSlider.x0;\n\n\n            let val = x1;\n            if (val > this.selectedSlider.width - this.selectedSlider.step) val = this.selectedSlider.width;\n            if (val < 0 + this.selectedSlider.step) val = 0;\n\n            let nomval = (val * (max - min)) / (w) + min;\n            nomval = (nomval / step >> 0) * step;\n            this.selectedSlider.value = val;\n            this.selectedSlider.normalizedValue = nomval;\n        }\n\n        // Calculates cursor coordinates\n        calculateUserCursor() {\n            let rect = this.container.getBoundingClientRect();\n\n            if (event.touches) {\n                this.MouseX = event.touches[0].clientX - rect.left;\n                this.MouseY = event.touches[0].clientY - rect.top;\n            } else {\n                this.MouseX = event.clientX - rect.left;\n                this.MouseY = event.clientY - rect.top;\n            }\n        }\n\n\n        // Returns a slider band based on the cursor position\n        getSelectedSlider() {\n            this.calculateUserCursor();\n            let selectedSlider;\n\n            for (let key in this.sliders) {\n                if (!this.sliders.hasOwnProperty(key)) continue;\n                let obj = this.sliders[key];\n                let xx;\n                let yy;\n                if (this.vertical) {\n                    xx = this.MouseX >= obj.x0 - this.scaleWidth / 2 && this.MouseX <= obj.x0 + this.scaleWidth / 2;\n                    yy = this.MouseY >= obj.y0 - obj.width - this.scaleWidth / 2 && this.MouseY <= obj.y0 + this.scaleWidth / 2;\n                } else {\n                    xx = this.MouseX >= obj.x0 - this.scaleWidth / 2 && this.MouseX <= obj.x0 + obj.width + this.scaleWidth / 2;\n                    yy = this.MouseY >= obj.y0 - this.scaleWidth / 2 && this.MouseY <= obj.y0 + this.scaleWidth / 2;\n                }\n\n                if (xx && yy) {\n                    selectedSlider = obj;\n                    break;\n                }\n            }\n\n            return selectedSlider ? selectedSlider : null;\n        }\n\n\n        // Event handlers (mousedown, mouseup, mousemove, mouseclick, touches)\n        _handleMouseDown(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (!this.selectedSlider) return;\n            this.the_body.addEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        _handleMouseUp(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n            this.currentSlider = this.selectedSlider;\n        }\n\n        _handleClick(event) {\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.currentSlider && this.getSelectedSlider() && this.currentSlider.id !== this.getSelectedSlider().id) return;\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleTouch(event) {\n            event.preventDefault();\n            this.selectedSlider = this.getSelectedSlider();\n            if (this.selectedSlider) this._rotation();\n        }\n\n        _handleMove(event) {\n            event.preventDefault();\n            if (this.continuousMode) this._rotation();\n            else if (this.selectedSlider) this._rotation();\n        }\n\n        _handleEnd(event) {\n            event.preventDefault();\n            this.the_body.removeEventListener('mousemove', this.rotationEventListener, false);\n        }\n\n        // Rotation wrapper\n        _rotation() {\n            this.calculateUserCursor();\n            if (this.continuousMode) this.selectedSlider = this.getSelectedSlider();\n            this.calculateValues(this.MouseX, this.MouseY);\n            this.drawAll();\n        }\n    }\n\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined')\n        module.exports = Slider;\n    else window.Slider = Slider;\n})();\n","import Slider from \"../src/slider-linear\";\n\nvar colors = [\n    \"#104b63\",\n    \"#ff9a9a\",\n    \"#76c7e9\",\n    \"#ffff9a\",\n    \"#9e9e9e\",\n    \"#bcf5bc\",\n    \"#f096f0\",\n    \"#229ed1\"\n];\n\nvar temp = {\n    min: -100,\n    max: 100,\n    step: 10\n};\n\nvar slider0 = new Slider({ canvasId: \"myCanvas0\", continuousMode: true,  vertical: false });\nvar slider1 = new Slider({ canvasId: \"myCanvas1\", continuousMode: false, vertical: false });\nvar slider2 = new Slider({ canvasId: \"myCanvas2\", continuousMode: true,  vertical: true });\nvar slider3 = new Slider({ canvasId: \"myCanvas3\", continuousMode: false, vertical: true });\nvar karandashi = new Slider({ canvasId: \"karandashi\", continuousMode: true, vertical: true });\n\ninitSliders();\ninitKarandashi();\n\nfunction randomInRange(start,end){\n    return Math.floor(Math.random() * (end - start + 1) + start);\n}\n\nfunction initSliders() {\n    for (var i=0; i<=6; i++) {\n        //horizontal sliders\n        var t = temp;\n        t.width = 260;\n        t.color = colors[i];\n        t.x0 = 30;\n        t.y0 = 30 + 40*i;\n        t.id = i;\n        slider0.addSlider(t);\n        slider0.setSliderValue(i, randomInRange(-100,100));\n\n        slider1.addSlider(t);\n        slider1.setSliderValue(i, randomInRange(-100,100));\n\n        //vertical sliders\n        t.width = 210;\n        t.x0 = 40 + 40*i;\n        t.y0 = 240;\n        slider2.addSlider(t);\n        slider2.setSliderValue(i, randomInRange(-100,100));\n\n        slider3.addSlider(t);\n        slider3.setSliderValue(i, randomInRange(-100,100));\n    }\n}\n\nfunction initKarandashi() {\n    for (var i=0; i<24; i++) {\n        var t = temp;\n        t.width = 340;\n        t.color = colors[i%8];\n        t.x0 = 30 + 40*i;\n        t.y0 = 370;\n        t.id = i.toString();\n        karandashi.addSlider(t);\n        karandashi.setSliderValue(t.id, randomInRange(temp.min, temp.max));\n    }\n}"]}